<div class="products-container">
  <h2>Catálogo de Productos</h2>
  
  <!-- Filtros y Búsqueda -->
  <div class="filters-section">
    <form id="filtersForm" class="filters-form">
      <div class="filter-group">
        <label for="search">Buscar:</label>
        <input type="text" id="search" name="query" placeholder="Buscar productos..." value="{{query}}">
      </div>
      
      <div class="filter-group">
        <label for="category">Categoría:</label>
        <select id="category" name="category">
          <option value="">Todas las categorías</option>
          <option value="Electrónica" {{#if (eq category 'Electrónica')}}selected{{/if}}>Electrónica</option>
          <option value="Computadoras" {{#if (eq category 'Computadoras')}}selected{{/if}}>Computadoras</option>
          <option value="Accesorios" {{#if (eq category 'Accesorios')}}selected{{/if}}>Accesorios</option>
          <option value="Tablets" {{#if (eq category 'Tablets')}}selected{{/if}}>Tablets</option>
        </select>
      </div>
      
      <div class="filter-group">
        <label for="sort">Ordenar por precio:</label>
        <select id="sort" name="sort">
          <option value="">Sin ordenar</option>
          <option value="asc" {{#if (eq sort 'asc')}}selected{{/if}}>Menor a mayor</option>
          <option value="desc" {{#if (eq sort 'desc')}}selected{{/if}}>Mayor a menor</option>
        </select>
      </div>
      
      <div class="filter-group">
        <label for="limit">Productos por página:</label>
        <select id="limit" name="limit">
          <option value="5" {{#if (eq limit '5')}}selected{{/if}}>5</option>
          <option value="10" {{#if (eq limit '10')}}selected{{/if}}>10</option>
          <option value="20" {{#if (eq limit '20')}}selected{{/if}}>20</option>
        </select>
      </div>
      
      <button type="submit" class="btn-filter">Aplicar Filtros</button>
      <button type="button" onclick="clearFilters()" class="btn-clear">Limpiar</button>
    </form>
  </div>

  <div id="notifications"></div>

  {{#if (eq status 'success')}}
    {{#if payload.length}}
      <!-- Lista de Productos -->
      <div class="products-grid" id="products-list">
        {{#each payload}}
          <div class="product-card" data-id="{{this._id}}">
            <div class="product-image">
              {{#if this.thumbnails.length}}
                <img src="{{this.thumbnails.[0]}}" alt="{{this.title}}" onerror="this.src='/images/no-image.png'">
              {{else}}
                <img src="/images/no-image.png" alt="Sin imagen disponible">
              {{/if}}
            </div>
            
            <div class="product-info">
              <h3>{{this.title}}</h3>
              <p class="product-description">{{this.description}}</p>
              <div class="product-details">
                <span class="price">${{this.price}}</span>
                <span class="category">{{this.category}}</span>
                <span class="stock {{#if this.stock}}in-stock{{else}}out-of-stock{{/if}}">
                  Stock: {{this.stock}}
                </span>
              </div>
            </div>
            
            <div class="product-actions">
              <a href="/products/{{this._id}}" class="btn-details">Ver Detalles</a>
              {{#if this.stock}}
                <button onclick="addToCart('{{this._id}}')" class="btn-add-cart">
                  Agregar al Carrito
                </button>
              {{else}}
                <button class="btn-out-of-stock" disabled>Sin Stock</button>
              {{/if}}
            </div>
          </div>
        {{/each}}
      </div>

      <!-- Paginación -->
      <div class="pagination">
        <div class="pagination-info">
          <p>Página {{page}} de {{totalPages}} ({{payload.length}} productos)</p>
        </div>
        
        <div class="pagination-controls">
          {{#if hasPrevPage}}
            <a href="{{prevLink}}" class="btn-page">« Anterior</a>
          {{else}}
            <span class="btn-page disabled">« Anterior</span>
          {{/if}}
          
          <span class="current-page">{{page}}</span>
          
          {{#if hasNextPage}}
            <a href="{{nextLink}}" class="btn-page">Siguiente »</a>
          {{else}}
            <span class="btn-page disabled">Siguiente »</span>
          {{/if}}
        </div>
      </div>
    {{else}}
      <div class="no-products">
        <p>No se encontraron productos con los filtros aplicados.</p>
        <button onclick="clearFilters()" class="btn-clear">Limpiar Filtros</button>
      </div>
    {{/if}}
  {{else}}
    <div class="error-message">
      <p>Error al cargar los productos: {{error}}</p>
      <button onclick="window.location.reload()" class="btn-retry">Reintentar</button>
    </div>
  {{/if}}
</div>

<script>
// Manejar formulario de filtros
document.getElementById('filtersForm').addEventListener('submit', function(e) {
  e.preventDefault();
  
  const formData = new FormData(this);
  const params = new URLSearchParams();
  
  for (let [key, value] of formData.entries()) {
    if (value.trim()) {
      params.append(key, value);
    }
  }
  
  // Siempre empezar desde la página 1 cuando se aplican filtros
  params.set('page', '1');
  
  window.location.href = `/products?${params.toString()}`;
});

function clearFilters() {
  window.location.href = '/products';
}

// Función para agregar al carrito
async function addToCart(productId) {
  try {
    console.log('Agregando producto al carrito:', productId);
    
    // Obtener o crear carrito
    let cartId = localStorage.getItem('cartId');
    
    if (!cartId) {
      const createCartResponse = await fetch('/api/carts', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });
      
      if (createCartResponse.ok) {
        const newCart = await createCartResponse.json();
        cartId = newCart._id;
        localStorage.setItem('cartId', cartId);
        console.log('Nuevo carrito creado:', cartId);
      } else {
        throw new Error('No se pudo crear el carrito');
      }
    }
    
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    });
    
    if (response.ok) {
      showNotification('Producto añadido al carrito', 'success');
      updateCartLink(cartId);
    } else {
      const errorData = await response.json();
      showNotification(`Error: ${errorData.error}`, 'error');
    }
  } catch (error) {
    console.error('Error:', error);
    showNotification('Error al conectar con el servidor', 'error');
  }
}

function updateCartLink(cartId) {
  const cartLinks = document.querySelectorAll('a[href*="/cart/"]');
  cartLinks.forEach(link => {
    link.href = `/cart/${cartId}`;
  });
}

function showNotification(message, type = 'info') {
  const notificationsDiv = document.getElementById('notifications');
  if (notificationsDiv) {
    notificationsDiv.innerHTML = `<div class="notification ${type}">${message}</div>`;
    
    setTimeout(() => {
      notificationsDiv.innerHTML = '';
    }, 3000);
  }
}

// Cargar cartId del localStorage si existe
document.addEventListener('DOMContentLoaded', () => {
  const cartId = localStorage.getItem('cartId');
  if (cartId) {
    updateCartLink(cartId);
  }
});
</script>

<style>
.products-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.filters-section {
  background: #f8f9fa;
  padding: 20px;
  border-radius: 8px;
  margin-bottom: 30px;
}

.filters-form {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 15px;
  align-items: end;
}

.filter-group {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.filter-group label {
  font-weight: bold;
  color: #495057;
}

.filter-group input,
.filter-group select {
  padding: 8px 12px;
  border: 1px solid #ced4da;
  border-radius: 4px;
  font-size: 14px;
}

.btn-filter,
.btn-clear {
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
}

.btn-filter {
  background-color: #007bff;
  color: white;
}

.btn-filter:hover {
  background-color: #0056b3;
}

.btn-clear {
  background-color: #6c757d;
  color: white;
}

.btn-clear:hover {
  background-color: #545b62;
}

.products-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.product-card {
  background: white;
  border: 1px solid #dee2e6;
  border-radius: 8px;
  overflow: hidden;
  transition: transform 0.2s, box-shadow 0.2s;
}

.product-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.product-image {
  height: 200px;
  overflow: hidden;
}

.product-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.no-image {
  width: 100%;
  height: 100%;
  background: #f8f9fa;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #6c757d;
  border: 2px dashed #dee2e6;
}

.product-info {
  padding: 15px;
}

.product-info h3 {
  margin: 0 0 10px 0;
  color: #333;
  font-size: 1.2rem;
}

.product-description {
  color: #666;
  font-size: 0.9rem;
  margin-bottom: 10px;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.product-details {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

.price {
  font-size: 1.3rem;
  font-weight: bold;
  color: #28a745;
}

.category {
  background: #e9ecef;
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 0.8rem;
  color: #495057;
}

.stock.in-stock {
  color: #28a745;
  font-size: 0.9rem;
}

.stock.out-of-stock {
  color: #dc3545;
  font-size: 0.9rem;
}

.product-actions {
  padding: 0 15px 15px;
  display: flex;
  gap: 10px;
}

.btn-details {
  flex: 1;
  background-color: #17a2b8;
  color: white;
  text-decoration: none;
  padding: 8px 16px;
  border-radius: 4px;
  text-align: center;
  font-size: 0.9rem;
}

.btn-details:hover {
  background-color: #138496;
}

.btn-add-cart {
  flex: 1;
  background-color: #28a745;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
}

.btn-add-cart:hover {
  background-color: #218838;
}

.btn-out-of-stock {
  flex: 1;
  background-color: #6c757d;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  cursor: not-allowed;
  font-size: 0.9rem;
}

.pagination {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 0;
  border-top: 1px solid #dee2e6;
}

.pagination-controls {
  display: flex;
  align-items: center;
  gap: 15px;
}

.btn-page {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  text-decoration: none;
  border-radius: 4px;
}

.btn-page:hover {
  background-color: #0056b3;
}

.btn-page.disabled {
  background-color: #6c757d;
  cursor: not-allowed;
}

.current-page {
  font-weight: bold;
  padding: 8px 16px;
  background-color: #e9ecef;
  border-radius: 4px;
}

.no-products,
.error-message {
  text-align: center;
  padding: 40px;
  background: #f8f9fa;
  border-radius: 8px;
}

.btn-retry {
  background-color: #dc3545;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 10px;
}

.notification {
  padding: 10px 15px;
  border-radius: 4px;
  margin-bottom: 15px;
}

.notification.success {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.notification.error {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

@media (max-width: 768px) {
  .filters-form {
    grid-template-columns: 1fr;
  }
  
  .products-grid {
    grid-template-columns: 1fr;
  }
  
  .pagination {
    flex-direction: column;
    gap: 15px;
  }
}
</style>
