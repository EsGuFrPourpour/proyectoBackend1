<div class="product-detail-container">
  <div class="product-detail">
    <div class="product-images">
      {{#if product.thumbnails.length}}
        {{#each product.thumbnails}}
          <img src="{{this}}" alt="{{../product.title}}" class="product-image" data-fallback="/images/no-image.png">
        {{/each}}
      {{else}}
        <img src="/images/no-image.png" alt="Sin imagen disponible" class="product-image">
      {{/if}}
    </div>
    
    <div class="product-info">
      <h1>{{product.title}}</h1>
      <p class="product-description">{{product.description}}</p>
      
      <div class="product-details">
        <div class="detail-item">
          <strong>Precio:</strong> 
          <span class="price">${{product.price}}</span>
        </div>
        
        <div class="detail-item">
          <strong>Categoría:</strong> 
          <span class="category">{{product.category}}</span>
        </div>
        
        <div class="detail-item">
          <strong>Código:</strong> 
          <span class="code">{{product.code}}</span>
        </div>
        
        <div class="detail-item">
          <strong>Stock disponible:</strong> 
          <span class="stock {{#if product.stock}}in-stock{{else}}out-of-stock{{/if}}">
            {{product.stock}} unidades
          </span>
        </div>
        
        <div class="detail-item">
          <strong>Estado:</strong> 
          <span class="status {{#if product.status}}active{{else}}inactive{{/if}}">
            {{#if product.status}}Activo{{else}}Inactivo{{/if}}
          </span>
        </div>
      </div>
      
      <div class="product-actions">
        {{#if product.stock}}
          <div class="quantity-selector">
            <label for="quantity">Cantidad:</label>
            <input type="number" id="quantity" min="1" max="{{product.stock}}" value="1">
          </div>
          
          <button 
            data-action="add-to-cart-with-quantity" 
            data-product-id="{{product._id}}" 
            class="btn-add-to-cart">
            Agregar al Carrito
          </button>
        {{else}}
          <button class="btn-out-of-stock" disabled>
            Sin Stock
          </button>
        {{/if}}
        
        <a href="/" class="btn-back">Volver a Productos</a>
      </div>
    </div>
  </div>
  
  <div id="notifications"></div>
</div>

<script>
document.addEventListener('click', function(e) {
  if (e.target.matches('[data-action="add-to-cart-with-quantity"]')) {
    const productId = e.target.dataset.productId;
    addToCartWithQuantity(productId);
  }
});

document.addEventListener('error', function(e) {
  if (e.target.matches('img[data-fallback]')) {
    e.target.src = e.target.dataset.fallback;
  }
}, true);

async function addToCartWithQuantity(productId) {
  try {
    const quantity = parseInt(document.getElementById('quantity').value) || 1;
    
    const authToken = localStorage.getItem('authToken');
    
    if (!authToken) {
      showNotification('Debes iniciar sesión para agregar productos al carrito', 'error');
      setTimeout(() => {
        window.location.href = '/login';
      }, 2000);
      return;
    }
    
    console.log('[v0] Agregando producto al carrito. ProductId:', productId, 'Quantity:', quantity);
    
    for (let i = 0; i < quantity; i++) {
      const response = await fetch(`/api/carts/my-cart/products/${productId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${authToken}`
        }
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        console.error('[v0] Error al agregar producto:', errorData);
        
        if (response.status === 401) {
          showNotification('Sesión expirada. Por favor, inicia sesión nuevamente.', 'error');
          localStorage.removeItem('authToken');
          localStorage.removeItem('userData');
          setTimeout(() => {
            window.location.href = '/login';
          }, 2000);
          return;
        }
        
        throw new Error(errorData.message || errorData.error || 'Error al agregar producto');
      }
    }
    
    showNotification(`${quantity} producto(s) agregado(s) al carrito`, 'success');
    
  } catch (error) {
    console.error('[v0] Error en addToCartWithQuantity:', error);
    showNotification(error.message, 'error');
  }
}

function showNotification(message, type = 'info') {
  const notificationsDiv = document.getElementById('notifications');
  if (notificationsDiv) {
    notificationsDiv.innerHTML = `<div class="notification ${type}">${message}</div>`;
    
    setTimeout(() => {
      notificationsDiv.innerHTML = '';
    }, 3000);
  }
}
</script>

<style>
.product-detail-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.product-detail {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 40px;
  background: white;
  border-radius: 8px;
  padding: 30px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.product-images {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.product-image {
  width: 100%;
  height: 300px;
  object-fit: cover;
  border-radius: 8px;
  border: 1px solid #ddd;
}

.no-image {
  width: 100%;
  height: 300px;
  background: #f8f9fa;
  border: 2px dashed #dee2e6;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #6c757d;
}

.product-info h1 {
  font-size: 2.5rem;
  color: #333;
  margin-bottom: 15px;
}

.product-description {
  font-size: 1.1rem;
  color: #666;
  line-height: 1.6;
  margin-bottom: 25px;
}

.product-details {
  margin-bottom: 30px;
}

.detail-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid #eee;
}

.detail-item:last-child {
  border-bottom: none;
}

.price {
  font-size: 1.5rem;
  font-weight: bold;
  color: #28a745;
}

.stock.in-stock {
  color: #28a745;
}

.stock.out-of-stock {
  color: #dc3545;
}

.status.active {
  color: #28a745;
}

.status.inactive {
  color: #dc3545;
}

.product-actions {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.quantity-selector {
  display: flex;
  align-items: center;
  gap: 10px;
}

.quantity-selector input {
  width: 80px;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  text-align: center;
}

.btn-add-to-cart {
  background-color: #28a745;
  color: white;
  border: none;
  padding: 15px 30px;
  border-radius: 5px;
  font-size: 1.1rem;
  cursor: pointer;
  transition: background-color 0.3s;
}

.btn-add-to-cart:hover {
  background-color: #218838;
}

.btn-out-of-stock {
  background-color: #6c757d;
  color: white;
  border: none;
  padding: 15px 30px;
  border-radius: 5px;
  font-size: 1.1rem;
  cursor: not-allowed;
}

.btn-back {
  background-color: #007bff;
  color: white;
  text-decoration: none;
  padding: 12px 25px;
  border-radius: 5px;
  text-align: center;
  transition: background-color 0.3s;
}

.btn-back:hover {
  background-color: #0056b3;
}

.notification {
  padding: 10px 15px;
  border-radius: 4px;
  margin-top: 15px;
}

.notification.success {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.notification.error {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

@media (max-width: 768px) {
  .product-detail {
    grid-template-columns: 1fr;
    gap: 20px;
    padding: 20px;
  }
  
  .product-info h1 {
    font-size: 2rem;
  }
}
</style>
